/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        sm: sm {
            compatible = "zmk,behavior-sticky-key";
            label = "SM";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <1000>;
            ignore-modifiers;
            quick-release;
        };

        sl_mo: sl_mo {
            compatible = "zmk,behavior-hold-tap";
            label = "SL_MO";
            bindings = <&mo>, <&sl>;

            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <100>;
        };

        td_alt: td_alt {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_ALT";
            #binding-cells = <0>;
            bindings = <&smt LALT LALT>, <&smt LALT LALT>;
        };

        td_quot: td_quot {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_QUOT";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp DQT>;
        };

        td_semicolon: td_semicolon {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SEMICOLON";
            #binding-cells = <0>;
            bindings = <&kp SEMI>, <&kp COLON>;
        };

        td_rshift: td_rshift {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_RSHIFT";
            #binding-cells = <0>;
            bindings = <&smt RSHFT RSHIFT>, <&caps_word>;
        };

        td_lctrl: td_lctrl {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_LCTRL";
            #binding-cells = <0>;
            bindings = <&smt LCTRL LCTRL>, <&smt LEFT_WIN LEFT_WIN>;
        };

        smt: smt {
            compatible = "zmk,behavior-hold-tap";
            label = "SMT";
            bindings = <&kp>, <&sm>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            flavor = "tap-unless-interrupted";
            quick-tap-ms = <200>;
        };

        td_spc: td_spc {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SPC";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&kp TAB>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE         &kp Q  &kp W  &kp E      &kp R      &kp T         &kp Y       &kp U    &kp I       &kp O    &kp P          &kp BACKSPACE
&smt LSHIFT LSHFT  &kp A  &kp S  &kp D      &kp F      &kp G         &kp H       &kp J    &kp K       &kp L    &td_semicolon  &td_quot
&td_alt            &kp Z  &kp X  &kp C      &kp V      &kp B         &kp N       &kp M    &kp COMMA   &kp DOT  &kp FSLH       &smt RCTRL RCTRL
                                 &td_lctrl  &kp ENTER  &sl_mo 1 1    &sl_mo 2 2  &td_spc  &td_rshift
            >;
        };

        lower {
            bindings = <
&kp GRAVE       &kp EXCLAMATION  &kp AT_SIGN   &kp POUND     &kp DOLLAR        &kp PERCENT       &kp CARET        &kp AMPERSAND      &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none
&kp TILDE       &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4      &kp NUMBER_5      &kp NUMBER_6     &kp NUMBER_7       &kp NUMBER_8   &kp NUMBER_9          &kp NUMBER_0           &kp PIPE
&kp UNDERSCORE  &kp EQUAL        &kp MINUS     &kp PLUS      &kp LEFT_BRACKET  &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp LESS_THAN  &kp GREATER_THAN      &kp QUESTION           &kp BACKSLASH
                                               &trans        &trans            &trans            &trans           &trans             &trans
            >;
        };

        upper {
            bindings = <
&kp LC(Z)  &kp F1  &kp F2   &kp F3   &kp F4   &kp LC(C)    &kp HOME        &kp PAGE_UP    &kp END         &trans           &kp PRINTSCREEN  &kp DELETE
&kp LC(Y)  &kp F5  &kp F6   &kp F7   &kp F8   &kp LC(V)    &kp LEFT_ARROW  &kp UP_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp INSERT       &trans
&trans     &kp F9  &kp F10  &kp F11  &kp F12  &none        &trans          &kp PAGE_DOWN  &none           &none            &none            &none
                            &trans   &trans   &trans       &trans          &trans         &trans
            >;
        };

        adjust {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp C_VOLUME_UP  &kp C_MUTE  &kp C_NEXT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp C_VOL_DN     &kp C_PP    &kp C_PREV  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans           &trans      &trans      &trans  &trans
                        &trans  &trans  &trans    &trans  &trans           &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
